jobs:
- job: 'TestLinux'
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python311-Linux:
        python.version: '3.11'
    maxParallel: 3
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'
  - script: sudo apt-get update
    displayName: 'AptGet Update'
  - script: sudo apt-get install -y pandoc
    displayName: 'Install Pandoc'
  - script: sudo apt-get install -y texlive texlive-latex-extra texlive-xetex dvipng
    displayName: 'Install Latex'
  - script: sudo apt-get install -y p7zip-full
    displayName: 'Install 7z, rar'
  - script: sudo apt-get install -y inkscape
    displayName: 'Install Inkscape'
  - script: sudo apt-get install -y graphviz
    displayName: 'Install Graphviz'
  - script: python -m pip install --upgrade pip setuptools wheel
    displayName: 'Install tools'
  - script: pip install -r requirements.txt
    displayName: 'Install Requirements'
  - script: python -c "import platform;print(platform.version())"
    displayName: 'Platform'
  - script: |
      python -u setup.py build_ext --inplace
    displayName: 'Build inplace'
  - script: |
      python -u setup.py unittests
    displayName: 'Runs Unit Tests'
#  - script: |
#      python -u setup.py build_sphinx
#    displayName: 'Builds Documentation'
# Links: https://quay.io/organization/pypa, https://github.com/pypa/manylinux
  - script: |
      python -m pip install cibuildwheel
      export CIBW_MANYLINUX_X86_64_IMAGE="manylinux_2_24"
      export CIBW_BEFORE_BUILD="pip install pybind11 cython numpy scipy pyquickhelper"
      export CIBW_BUILD="cp310-manylinux_x86_64 cp311-manylinux_x86_64"
      python -m cibuildwheel --output-dir dist/wheelhouse310 --platform linux
    displayName: 'Build Package manylinux_x_y_py310'
  - script: |
      export CIBW_MANYLINUX_X86_64_IMAGE="manylinux2014"
      export CIBW_BEFORE_BUILD="pip install pybind11 cython numpy scipy pyquickhelper"
      export CIBW_MANYLINUX_X86_64_IMAGE=quay.io/pypa/manylinux2014_x86_64:latest
      export CIBW_BUILD="cp39-manylinux_x86_64"
      python -m cibuildwheel --output-dir dist/wheelhouse --platform linux
    displayName: 'Build Package manylinux2014'
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'wheel-linux'
      targetPath: 'dist'

- job: 'TestWindows'
  pool:
    vmImage: 'windows-latest'
  strategy:
    matrix:
      Python311-Windows:
        python.version: '3.11'
    maxParallel: 3
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'
  - script: python -m pip install --upgrade pip setuptools wheel pytest
    displayName: 'Install tools'
  - script: pip install -r requirements.txt
    displayName: 'Install Requirements'
  - script: python -c "import platform;print(platform.version())"
    displayName: 'Platform'
  - script: python -u setup.py build_ext --inplace
    displayName: 'Build inplace'
  - script: python setup.py install
    displayName: 'install the package'
  - script: pytest -v -v  _unittests --ignore-glob=**/test_run_notebooks.py
    displayName: 'Runs Unit Tests'
  - script: |
      python -m pip install cibuildwheel
      set CIBW_BEFORE_BUILD=pip install pybind11 cython numpy scipy pyquickhelper
      set CIBW_BUILD=cp310-win_amd64 cp311-win_amd64
      python -m cibuildwheel --output-dir dist/wheelhouse
    displayName: 'Build Package many'
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'wheel-windows'
      targetPath: 'dist'

- job: 'TestMac'
  pool:
    vmImage: 'macOS-latest'
  strategy:
    matrix:
      Python310-MacOs:
        python.version: '3.10'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'
  - script: gcc --version
    displayName: 'gcc version'
  - script: brew update
    displayName: 'brew update'
  - script: export
    displayName: 'export'
  - script: gcc --version
    displayName: 'gcc version'
  - script: brew install llvm
    continueOnError: true
    displayName: 'install llvm'
  - script: brew install libomp
    displayName: 'Install omp'
  - script: brew upgrade p7zip
    continueOnError: true
    displayName: 'Install p7zip'
#  - script: brew install pandoc
#    displayName: 'Install Pandoc'
  - script: brew install graphviz
    continueOnError: true
    displayName: 'Install Graphviz'
  - script: brew install cairo pango gdk-pixbuf libffi
    displayName: 'Install cairo pango gdk-pixbuf libffi'
  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH.
  - bash: sudo chown -R $USER $CONDA
    displayName: Take ownership of conda installation
  - bash: conda install -y -c conda-forge numpy scipy
    displayName: Install numpy scipy
  - bash: conda install -y -c conda-forge llvmlite numba pybind11
    displayName: Install llvmlite numba pybind11
  - script: pip install -r requirements.txt
    displayName: 'Install Requirements'
  - script: |
         # export MACOSX_DEPLOYMENT_TARGET=10.13
         python setup.py build_ext --inplace
    displayName: 'Build package inplace'
  - script: python -u setup.py unittests
    displayName: 'Runs Unit Tests'
  - script: |
      python -m pip install cibuildwheel
      export CIBW_BEFORE_BUILD="pip install pybind11 cython numpy scipy pyquickhelper pyquicksetup"
      export CIBW_BUILD="cp310-macosx_x86_64 cp311-macosx_x86_64"
      export CIBW_ENVIRONMENT="MACOSX_DEPLOYMENT_TARGET=10.13"
      export CC=gcc
      export CXX=g++
      python -m cibuildwheel --output-dir dist/wheelhouse
    continueOnError: true
    displayName: 'Build Package many'
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'wheel-mac'
      targetPath: 'dist'
